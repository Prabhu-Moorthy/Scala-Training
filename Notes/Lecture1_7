Tail Recursion
--------------
Eg,. Program to find the GCD of 2 numbers
def gcd(a:Double, b:Double): Double =
if(b ==0 ) a else gcd(b,a%b)

gcd(14,21)
    if(21 == 0) 14 else gcd(21,14%21)
gcd(21,14)
    if(14 == 0) 21 else gcd(14,21%14)
gcd(14,7)
    if(7 == 0 ) 14 else gcd(14,14%7)
gcd(14,0)
    if(0 == 0) 7 else gcd(14,14%0)
7

Eg., Program to find the factorial of a number
def fact(x:Int): Int =
if( x == 0 ) 1 else x * fact(x - 1)

fact(4)
if(4 == 0) 1 else 4 * fact(4-1)
4 * fact(3)
4 * if(3 == 0) 1 else 3 * fact(3 - 1)
4 * 3 * fact(3 - 1)
4 * 3 * if(2 == 0) 1 else 2 * fact(2 - 1)
4 * 3 * 2 * fact(2 - 1)
4 * 3 * 2 * if(1 == 0) 1 else 1 * fact(1 - 1)
4 * 3 * 2 * 1 * fact(1 - 1)
4 * 3 * 2 * 1 * 1
24

The first program to find the gcd is called a tail recursive program because the function gcd is calling
another function(in this case it is calling itself, but can call other functions also) then only one stack
frame is used. Hence these calls are called tail calls or in this case tail recursion.